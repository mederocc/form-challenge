{"ast":null,"code":"var _jsxFileName = \"/Users/carlosmedero/form-challenge/src/pages/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormComponent(_ref) {\n  _s();\n  let {\n    initialValues,\n    data\n  } = _ref;\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    enableReinitialize: true\n  });\n  console.log(data);\n  // label, name, required, type\n\n  const formContent = Object.keys(data).map(el => {\n    if (el.name) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: el.name,\n          children: el.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: el.name\n          // value={formik.values[el.name]}\n          ,\n          id: el.name,\n          type: el.type\n          // onChange={formik.handleChange}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    if (el.type === \"submit\") {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: el.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(data).length ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: event => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: event => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : \"Loading\"\n  }, void 0, false);\n}\n_s(FormComponent, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","FormComponent","_ref","_s","initialValues","data","formik","onSubmit","values","alert","JSON","stringify","enableReinitialize","console","log","formContent","Object","keys","map","el","name","children","htmlFor","label","fileName","_jsxFileName","lineNumber","columnNumber","id","type","length","onChange","event","_c","$RefreshReg$"],"sources":["/Users/carlosmedero/form-challenge/src/pages/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction FormComponent({ initialValues, data }) {\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    enableReinitialize: true,\n  });\n\n  console.log(data);\n  // label, name, required, type\n\n  const formContent = Object.keys(data).map((el) => {\n    if (el.name) {\n      return (\n        <>\n          <label htmlFor={el.name}>{el.label}</label>\n          <input\n            name={el.name}\n            // value={formik.values[el.name]}\n            id={el.name}\n            type={el.type}\n            // onChange={formik.handleChange}\n          ></input>\n        </>\n      );\n    }\n\n    if (el.type === \"submit\") {\n      return <button type=\"submit\">{el.label}</button>;\n    }\n  });\n\n  return (\n    <>\n      {Object.keys(data).length ? (\n        <form>\n          {/* {Object.keys(data).map((el) => {\n            if (el.name) {\n              return (\n                <>\n                  <label htmlFor={el.name}>{el.label}</label>\n                  <input\n                    name={el.name}\n                    // value={formik.values[el.name]}\n                    id={el.name}\n                    type={el.type}\n                    // onChange={formik.handleChange}\n                  ></input>\n                </>\n              );\n            }\n\n            if (el.type === \"submit\") {\n              return <button type=\"submit\">{el.label}</button>;\n            }\n          })} */}\n\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" id=\"name\" onChange={(event) => {}} />\n\n          <label htmlFor=\"email\">Email:</label>\n          <input type=\"email\" id=\"email\" onChange={(event) => {}} />\n        </form>\n      ) : (\n        \"Loading\"\n      )}\n    </>\n  );\n}\n\nexport default FormComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,aAAaA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,aAAa;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAC5C,MAAMI,MAAM,GAAGV,SAAS,CAAC;IACvBQ,aAAa,EAAEA,aAAa;IAC5BG,QAAQ,EAAGC,MAAM,IAAK;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IACDI,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACjB;;EAEA,MAAMU,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,GAAG,CAAEC,EAAE,IAAK;IAChD,IAAIA,EAAE,CAACC,IAAI,EAAE;MACX,oBACEtB,OAAA,CAAAE,SAAA;QAAAqB,QAAA,gBACEvB,OAAA;UAAOwB,OAAO,EAAEH,EAAE,CAACC,IAAK;UAAAC,QAAA,EAAEF,EAAE,CAACI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC3C7B,OAAA;UACEsB,IAAI,EAAED,EAAE,CAACC;UACT;UAAA;UACAQ,EAAE,EAAET,EAAE,CAACC,IAAK;UACZS,IAAI,EAAEV,EAAE,CAACU;UACT;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACO;MAAA,gBACR;IAEP;IAEA,IAAIR,EAAE,CAACU,IAAI,KAAK,QAAQ,EAAE;MACxB,oBAAO/B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAEF,EAAE,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAClD;EACF,CAAC,CAAC;EAEF,oBACE7B,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EACGL,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACyB,MAAM,gBACvBhC,OAAA;MAAAuB,QAAA,gBAsBEvB,OAAA;QAAOwB,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnC7B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACD,EAAE,EAAC,MAAM;QAACG,QAAQ,EAAGC,KAAK,IAAK,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAExD7B,OAAA;QAAOwB,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACrC7B,OAAA;QAAO+B,IAAI,EAAC,OAAO;QAACD,EAAE,EAAC,OAAO;QAACG,QAAQ,EAAGC,KAAK,IAAK,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,GAEP;EACD,iBACA;AAEP;AAACxB,EAAA,CArEQF,aAAa;EAAA,QACLL,SAAS;AAAA;AAAAqC,EAAA,GADjBhC,aAAa;AAuEtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}