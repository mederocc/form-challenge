{"ast":null,"code":"var _jsxFileName = \"/Users/carlosmedero/form-challenge/src/pages/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormComponent(_ref) {\n  _s();\n  let {\n    initialValues,\n    data\n  } = _ref;\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    enableReinitialize: true\n  });\n  console.log(data);\n  // label, name, required, type\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Object.keys(data).length ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: Object.keys(data).map(el => {\n        if (el.name) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: el.name,\n              children: el.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: el.name,\n              value: formik.values[el.name],\n              id: el.name,\n              type: el.type,\n              onChange: formik.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        }\n        if (el.type === \"submit\") {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: el.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 22\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : \"Loading\"\n  }, void 0, false);\n}\n_s(FormComponent, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = FormComponent;\nexport default FormComponent;\nvar _c;\n$RefreshReg$(_c, \"FormComponent\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","FormComponent","_ref","_s","initialValues","data","formik","onSubmit","values","alert","JSON","stringify","enableReinitialize","console","log","children","Object","keys","length","map","el","name","htmlFor","label","fileName","_jsxFileName","lineNumber","columnNumber","value","id","type","onChange","handleChange","_c","$RefreshReg$"],"sources":["/Users/carlosmedero/form-challenge/src/pages/Form.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction FormComponent({ initialValues, data }) {\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n    enableReinitialize: true,\n  });\n\n  console.log(data);\n  // label, name, required, type\n\n  return (\n    <>\n      {Object.keys(data).length ? (\n        <form>\n          {Object.keys(data).map((el) => {\n            if (el.name) {\n              return (\n                <>\n                  <label htmlFor={el.name}>{el.label}</label>\n                  <input\n                    name={el.name}\n                    value={formik.values[el.name]}\n                    id={el.name}\n                    type={el.type}\n                    onChange={formik.handleChange}\n                  ></input>\n                </>\n              );\n            }\n\n            if (el.type === \"submit\") {\n              return <button type=\"submit\">{el.label}</button>;\n            }\n          })}\n        </form>\n      ) : (\n        \"Loading\"\n      )}\n    </>\n  );\n}\n\nexport default FormComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,aAAaA,CAAAC,IAAA,EAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,aAAa;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAC5C,MAAMI,MAAM,GAAGV,SAAS,CAAC;IACvBQ,aAAa,EAAEA,aAAa;IAC5BG,QAAQ,EAAGC,MAAM,IAAK;MACpBC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IACDI,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;EACjB;;EAEA,oBACEP,OAAA,CAAAE,SAAA;IAAAe,QAAA,EACGC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,MAAM,gBACvBpB,OAAA;MAAAiB,QAAA,EACGC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACc,GAAG,CAAEC,EAAE,IAAK;QAC7B,IAAIA,EAAE,CAACC,IAAI,EAAE;UACX,oBACEvB,OAAA,CAAAE,SAAA;YAAAe,QAAA,gBACEjB,OAAA;cAAOwB,OAAO,EAAEF,EAAE,CAACC,IAAK;cAAAN,QAAA,EAAEK,EAAE,CAACG;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eAC3C7B,OAAA;cACEuB,IAAI,EAAED,EAAE,CAACC,IAAK;cACdO,KAAK,EAAEtB,MAAM,CAACE,MAAM,CAACY,EAAE,CAACC,IAAI,CAAE;cAC9BQ,EAAE,EAAET,EAAE,CAACC,IAAK;cACZS,IAAI,EAAEV,EAAE,CAACU,IAAK;cACdC,QAAQ,EAAEzB,MAAM,CAAC0B;YAAa;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACvB;UAAA,gBACR;QAEP;QAEA,IAAIP,EAAE,CAACU,IAAI,KAAK,QAAQ,EAAE;UACxB,oBAAOhC,OAAA;YAAQgC,IAAI,EAAC,QAAQ;YAAAf,QAAA,EAAEK,EAAE,CAACG;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAU;QAClD;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,GAEP;EACD,iBACA;AAEP;AAACxB,EAAA,CA1CQF,aAAa;EAAA,QACLL,SAAS;AAAA;AAAAqC,EAAA,GADjBhC,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}