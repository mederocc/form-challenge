{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useLayoutEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const [fields, setfields] = useState([]);\n  useLayoutEffect(() => {\n    fetch(\"https://testdata-49262-default-rtdb.firebaseio.com/.json\").then(response => response.json()).then(response => setData(response.items));\n  }, []);\n  const getInitialValues = data => {\n    const mappedFields = [];\n    data.forEach(entry => {\n      if (entry.name) mappedFields.push(entry.name);\n    });\n    setfields(mappedFields);\n  };\n  const formik = useFormik({\n    initialValues: {\n      ...getInitialValues(data)\n    }\n  });\n  console.log(formik.values);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Hello!\"\n  }, void 0, false);\n}\n_s(Form, \"wKCLmF25IIs72KNgJhaJuYC7iPg=\", false, function () {\n  return [useFormik];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useLayoutEffect","useFormik","Fragment","_Fragment","jsxDEV","_jsxDEV","Form","props","_s","data","setData","fields","setfields","fetch","then","response","json","items","getInitialValues","mappedFields","forEach","entry","name","push","formik","initialValues","console","log","values","children","_c","$RefreshReg$"],"sources":["/Users/carlosmedero/form-challenge/src/pages/Form.js"],"sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\nimport { useFormik } from \"formik\";\n\nfunction Form(props) {\n  const [data, setData] = useState([]);\n  const [fields, setfields] = useState([]);\n\n  useLayoutEffect(() => {\n    fetch(\"https://testdata-49262-default-rtdb.firebaseio.com/.json\")\n      .then((response) => response.json())\n      .then((response) => setData(response.items));\n  }, []);\n\n  const getInitialValues = (data) => {\n    const mappedFields = [];\n    data.forEach((entry) => {\n      if (entry.name) mappedFields.push(entry.name);\n    });\n    setfields(mappedFields);\n  };\n\n  const formik = useFormik({ initialValues: { ...getInitialValues(data) } });\n\n  console.log(formik.values);\n\n  return <>Hello!</>;\n}\n\nexport default Form;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExCC,eAAe,CAAC,MAAM;IACpBa,KAAK,CAAC,0DAA0D,CAAC,CAC9DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEC,QAAQ,IAAKL,OAAO,CAACK,QAAQ,CAACE,KAAK,CAAC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIT,IAAI,IAAK;IACjC,MAAMU,YAAY,GAAG,EAAE;IACvBV,IAAI,CAACW,OAAO,CAAEC,KAAK,IAAK;MACtB,IAAIA,KAAK,CAACC,IAAI,EAAEH,YAAY,CAACI,IAAI,CAACF,KAAK,CAACC,IAAI,CAAC;IAC/C,CAAC,CAAC;IACFV,SAAS,CAACO,YAAY,CAAC;EACzB,CAAC;EAED,MAAMK,MAAM,GAAGvB,SAAS,CAAC;IAAEwB,aAAa,EAAE;MAAE,GAAGP,gBAAgB,CAACT,IAAI;IAAE;EAAE,CAAC,CAAC;EAE1EiB,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,MAAM,CAAC;EAE1B,oBAAOvB,OAAA,CAAAF,SAAA;IAAA0B,QAAA,EAAE;EAAM,iBAAG;AACpB;AAACrB,EAAA,CAvBQF,IAAI;EAAA,QAkBIL,SAAS;AAAA;AAAA6B,EAAA,GAlBjBxB,IAAI;AAyBb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}